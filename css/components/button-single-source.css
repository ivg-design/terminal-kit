/*
 * button.css - SINGLE SOURCE OF TRUTH
 * This is the ONLY place you write button styles
 * No duplication, no layers in source code
 */

:host {
  display: inline-block;
}

/* Base button styles */
button {
  position: relative;
  padding: 0.5em 1em;
  background: var(--btn-bg, #00ff00);
  color: var(--btn-color, #000);
  border: 1px solid currentColor;
  cursor: pointer;
  font-family: var(--font-mono, monospace);
  font-size: 1em;
  line-height: 1.5;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Variant styles */
:host([variant="primary"]) button {
  background: var(--color-primary, #00ff00);
  color: var(--color-black, #000);
  border-color: var(--color-primary, #00ff00);
}

:host([variant="danger"]) button {
  background: var(--color-danger, #ff0000);
  color: var(--color-white, #fff);
  border-color: var(--color-danger, #ff0000);
}

:host([variant="secondary"]) button {
  background: transparent;
  color: var(--color-secondary, #00ffff);
  border-color: var(--color-secondary, #00ffff);
}

/* State styles */
:host([disabled]) button {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Size variants */
:host([size="small"]) button {
  padding: 0.25em 0.5em;
  font-size: 0.875em;
}

:host([size="large"]) button {
  padding: 0.75em 1.5em;
  font-size: 1.125em;
}

/* Interactions */
button {
  transition: all 0.2s ease;
}

button:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 2px 8px rgba(0, 255, 0, 0.3);
}

button:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: 0 1px 2px rgba(0, 255, 0, 0.2);
}

/* Focus styles */
button:focus-visible {
  outline: 2px solid var(--color-focus, #ffff00);
  outline-offset: 2px;
}

/* Loading state */
:host([loading]) button {
  pointer-events: none;
  opacity: 0.7;
}

:host([loading]) button::after {
  content: '';
  position: absolute;
  width: 1em;
  height: 1em;
  margin: auto;
  border: 2px solid transparent;
  border-top-color: currentColor;
  border-radius: 50%;
  animation: spin 0.6s linear infinite;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}